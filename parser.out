Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABYSS
    AND
    ASSIGN
    BACK
    BITWISE_AND
    BITWISE_NOT
    BITWISE_OR
    BITWISE_XOR
    COMMA
    CONTINUES
    ELSE
    EQUAL
    GO
    GREATER
    GREATER_EQUAL
    HOWEVER
    IF
    LESS
    LESS_EQUAL
    NOT
    OR
    PASS
    QUEST
    SHALL
    THE_2
    TO
    WHEN
    WHILE
    XOR
    YOU

Grammar

Rule 0     S' -> program
Rule 1     program -> global main_statement
Rule 2     global -> declaration_statement
Rule 3     global -> function_statement
Rule 4     function_statement -> FUNCTION TYPE ID OPEN_PARENTHESIS args CLOSE_PARENTHESIS OPEN_BRACE block CLOSE_BRACE
Rule 5     main_statement -> THE_1 JOURNEY BEGINS HERE blocks
Rule 6     declaration_statement -> type ID end
Rule 7     declaration_statement -> declaration_statement declaration_statement
Rule 8     block -> OPEN_BRACE statements CLOSE_BRACE
Rule 9     block -> block block
Rule 10    block -> empty
Rule 11    expression -> expression ADD expression
Rule 12    expression -> expression SUB expression
Rule 13    expression -> expression DIV expression
Rule 14    expression -> expression MULT expression
Rule 15    expression -> expression MOD expression
Rule 16    expression -> expression POW expression
Rule 17    expression -> literal
Rule 18    expression -> SUB literal
Rule 19    literal -> INT_LITERAL
Rule 20    literal -> FLOAT_LITERAL
Rule 21    literal -> CHAR_LITERAL
Rule 22    literal -> STRING_LITERAL
Rule 23    literal -> bool_literal
Rule 24    bool_literal -> BOOL_TRUE
Rule 25    bool_literal -> BOOL_FALSE
Rule 26    type -> UNSIGNED
Rule 27    type -> SHORT
Rule 28    type -> INT
Rule 29    type -> LONG
Rule 30    type -> FLOAT
Rule 31    type -> DOUBLE
Rule 32    type -> CHAR
Rule 33    type -> STRING
Rule 34    type -> BOOL
Rule 35    type -> VOID
Rule 36    end -> SEMICOLON
Rule 37    empty -> <empty>

Terminals, with rules where they appear

ABYSS                : 
ADD                  : 11
AND                  : 
ASSIGN               : 
BACK                 : 
BEGINS               : 5
BITWISE_AND          : 
BITWISE_NOT          : 
BITWISE_OR           : 
BITWISE_XOR          : 
BOOL                 : 34
BOOL_FALSE           : 25
BOOL_TRUE            : 24
CHAR                 : 32
CHAR_LITERAL         : 21
CLOSE_BRACE          : 4 8
CLOSE_PARENTHESIS    : 4
COMMA                : 
CONTINUES            : 
DIV                  : 13
DOUBLE               : 31
ELSE                 : 
EQUAL                : 
FLOAT                : 30
FLOAT_LITERAL        : 20
FUNCTION             : 4
GO                   : 
GREATER              : 
GREATER_EQUAL        : 
HERE                 : 5
HOWEVER              : 
ID                   : 4 6
IF                   : 
INT                  : 28
INT_LITERAL          : 19
JOURNEY              : 5
LESS                 : 
LESS_EQUAL           : 
LONG                 : 29
MOD                  : 15
MULT                 : 14
NOT                  : 
OPEN_BRACE           : 4 8
OPEN_PARENTHESIS     : 4
OR                   : 
PASS                 : 
POW                  : 16
QUEST                : 
SEMICOLON            : 36
SHALL                : 
SHORT                : 27
STRING               : 33
STRING_LITERAL       : 22
SUB                  : 12 18
THE_1                : 5
THE_2                : 
TO                   : 
UNSIGNED             : 26
VOID                 : 35
WHEN                 : 
WHILE                : 
XOR                  : 
YOU                  : 
error                : 

Nonterminals, with rules where they appear

TYPE                 : 4
args                 : 4
block                : 4 9 9
blocks               : 5
bool_literal         : 23
declaration_statement : 2 7 7
empty                : 10
end                  : 6
expression           : 11 11 12 12 13 13 14 14 15 15 16 16
function_statement   : 3
global               : 1
literal              : 17 18
main_statement       : 1
program              : 0
statements           : 8
type                 : 6

